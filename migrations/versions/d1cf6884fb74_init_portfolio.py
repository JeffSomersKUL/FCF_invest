"""init_portfolio

Revision ID: d1cf6884fb74
Revises: 5ef35b18dd48
Create Date: 2024-10-09 16:59:45.095959

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d1cf6884fb74"
down_revision = "5ef35b18dd48"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "asset",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "ASSET",
                "STOCK",
                "GOV_BILL",
                "OPTION",
                "CUSTOM",
                name="assettype",
            ),
            nullable=False,
        ),
        sa.Column(
            "currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "club_expense",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "platform",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "scheduled_task",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("run_time", sa.Time(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column(
            "type",
            sa.Enum("SAVE_STOCK_PRICE", name="tasktype"),
            nullable=False,
        ),
        sa.Column(
            "period", sa.Enum("DAILY", "ONCE", name="period"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uid"),
    )
    op.create_table(
        "trade_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "asset_transaction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("asset_id", sa.Integer(), nullable=False),
        sa.Column("price_per_stock", sa.Float(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("BUY", "SELL", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("transaction_cost", sa.Float(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("information", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["asset_id"],
            ["asset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "currency_conversion_transaction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("from_amount", sa.Float(), nullable=False),
        sa.Column("to_amount", sa.Float(), nullable=False),
        sa.Column(
            "from_currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.Column(
            "to_currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.Column("cost", sa.Float(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "fee",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column(
            "currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.Column("date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "government_bill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("issuer", sa.String(length=100), nullable=False),
        sa.Column("face_value", sa.Float(), nullable=False),
        sa.Column("maturity_date", sa.Date(), nullable=False),
        sa.Column("discount_rate", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["asset.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "interest",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=200), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column(
            "currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.Column("date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "member_investment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("stocks_received", sa.Integer(), nullable=False),
        sa.Column("information", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["member.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "member_transfer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("member_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["member.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "platform_transfer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column(
            "currency",
            sa.Enum("EUR", "USD", "GBP", name="currency"),
            nullable=False,
        ),
        sa.Column("cost", sa.Float(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stock",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("trade_type_id", sa.Integer(), nullable=True),
        sa.Column("ticker", sa.String(length=20), nullable=False),
        sa.Column("exchange", sa.String(length=30), nullable=True),
        sa.Column("long_name", sa.String(length=100), nullable=True),
        sa.Column("industry", sa.String(length=200), nullable=True),
        sa.Column(
            "meta_data", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["asset.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trade_type_id"],
            ["trade_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "custom_stock",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["stock.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dividend",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("stock_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("taxes_paid", sa.Float(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.ForeignKeyConstraint(
            ["stock_id"],
            ["stock.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "historical_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("stock_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["stock_id"],
            ["stock.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("stock_id", "date", name="_stock_date_uc"),
    )
    op.create_table(
        "option_stock",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("expiration_date", sa.Date(), nullable=False),
        sa.Column("strike_price", sa.Float(), nullable=False),
        sa.Column(
            "option_type",
            sa.Enum("CALL", "PUT", name="optiontype"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["stock.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("option_stock")
    op.drop_table("historical_data")
    op.drop_table("dividend")
    op.drop_table("custom_stock")
    op.drop_table("stock")
    op.drop_table("platform_transfer")
    op.drop_table("member_transfer")
    op.drop_table("member_investment")
    op.drop_table("interest")
    op.drop_table("government_bill")
    op.drop_table("fee")
    op.drop_table("currency_conversion_transaction")
    op.drop_table("asset_transaction")
    op.drop_table("trade_type")
    op.drop_table("scheduled_task")
    op.drop_table("platform")
    op.drop_table("club_expense")
    op.drop_table("asset")
    op.execute("DROP TYPE currency")
    op.execute("DROP TYPE transactiontype")
    op.execute("DROP TYPE optiontype")
    op.execute("DROP TYPE assettype")
    op.execute("DROP TYPE tasktype")
    op.execute("DROP TYPE period")
    # ### end Alembic commands ###
